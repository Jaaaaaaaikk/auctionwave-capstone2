-- Create Users table
CREATE TABLE Users (
    user_id INT IDENTITY(1,1) PRIMARY KEY,
    firstname NVARCHAR(100) NOT NULL,
    middlename NVARCHAR(100),
    lastname NVARCHAR(100) NOT NULL,
    location NVARCHAR(50) NOT NULL CHECK (location IN ('Manila', 'Quezon City', 'Cebu City', 'Davao City', 'Zamboanga City',
  'Antipolo', 'Taguig', 'Makati', 'Pasig', 'Cagayan de Oro'))
    email NVARCHAR(100) NOT NULL UNIQUE,
    password NVARCHAR(100) NOT NULL,
    user_type NVARCHAR(50) NOT NULL CHECK (user_type IN ('Bidder', 'Auctioneer')),
    created_at DATETIME DEFAULT GETDATE(),
    updated_at DATETIME DEFAULT GETDATE()
);

-- Create Bidders table
CREATE TABLE Bidders (
	bidder_category_id INT IDENTITY(1,1) PRIMARY KEY,
    bidder_id INT,
    category_id INT,
    FOREIGN KEY (bidder_id) REFERENCES Users(user_id),
    FOREIGN KEY (category_id) REFERENCES Categories(category_id)
);


CREATE TABLE Categories (
    category_id INT AUTO_INCREMENT PRIMARY KEY,
    category_name VARCHAR(250) NOT NULL
);

CREATE TABLE UserTokens (
    id INT PRIMARY KEY AUTO_INCREMENT,
    userId INT NOT NULL,
    token VARCHAR(512) NOT NULL,
    expiresAt DATETIME NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    revokedAt DATETIME NULL,
    FOREIGN KEY (userId) REFERENCES Users(user_id)
);


CREATE TABLE AuctionListings (
    listing_id INT AUTO_INCREMENT PRIMARY KEY,
    auctioneer_id INT,
    name VARCHAR(250) NOT NULL,
    location VARCHAR(250) NOT NULL,
    description TEXT,
    starting_bid DECIMAL(10,2) NOT NULL,
    bidding_type ENUM('Lowest-type', 'Offer-type') NOT NULL,
    rarity ENUM('Common', 'Uncommon', 'Rare'),
    status ENUM('Auction Pending', 'Auction Done') NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NULL,
    FOREIGN KEY (auctioneer_id) REFERENCES Users(user_id),
);

CREATE TABLE AuctionListingCategories (
    listing_id INT,
    category_id INT,
    PRIMARY KEY (listing_id, category_id),
    FOREIGN KEY (listing_id) REFERENCES AuctionListings(listing_id),
    FOREIGN KEY (category_id) REFERENCES Categories(category_id)
);


CREATE TABLE Comments (
    comment_id INT AUTO_INCREMENT PRIMARY KEY,
    bidder_id INT,
    listing_id INT,
    Comment TEXT NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT DATETIME,
    FOREIGN KEY (listing_id) REFERENCES AuctionListings(listing_id),
    FOREIGN KEY (bidder_id) REFERENCES Bidders(bidder_id)
);

CREATE TABLE EmailBlasts (
    email_blast_id INT AUTO_INCREMENT PRIMARY KEY,
    listing_id INT,
    blast_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (listing_id) REFERENCES AuctionListings(listing_id)
);

CREATE TABLE EmailBlastFees (
    fee_id INT AUTO_INCREMENT PRIMARY KEY,
    auction_id INT,
    fee_amount DECIMAL(10,2),
    status ENUM('Pending', 'Paid'),
    transaction_id VARCHAR(255), -- Transaction ID from third-party service
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (auction_id) REFERENCES AuctionListings(listing_id)
);


CREATE TABLE Bids (
    bid_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    listing_id INT,
    bid_amount DECIMAL(10,2),
    bid_time DATETIME DEFAULT CURRENT_TIMESTAMP,
    bid_status ENUM('Accepted', 'Rejected', 'Pending') DEFAULT 'Pending',
    is_winning BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (listing_id) REFERENCES AuctionListings(listing_id)
);

CREATE TABLE BidderPayments (
    payment_id INT AUTO_INCREMENT PRIMARY KEY,
    bidder_id INT,
    auction_id INT,
    amount DECIMAL(10,2),
    payment_type ENUM('Usage Fee', 'Cash Bond'),
    status ENUM('Pending', 'Completed', 'Failed'),
    transaction_id VARCHAR(255), -- Transaction ID from third-party service
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (bidder_id) REFERENCES Users(user_id),
    FOREIGN KEY (auction_id) REFERENCES AuctionListings(listing_id)
);


CREATE TABLE CashBond (
    bond_id INT AUTO_INCREMENT PRIMARY KEY,
    auction_id INT,
    bidder_id INT,
    amount DECIMAL(10,2) NOT NULL,
    status ENUM('Pending', 'Confirmed', 'Withdrawn', 'Claimed') NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (auction_id) REFERENCES AuctionListings(listing_id),
    FOREIGN KEY (bidder_id) REFERENCES Users(user_id)
);

CREATE TABLE BidderNotifications (
    notification_id INT AUTO_INCREMENT PRIMARY KEY,
    bidder_id INT,
    auction_id INT,
    notification_type ENUM('Auction Win', 'Payment Instructions'),
    notification_datetime DATETIME DEFAULT CURRENT_TIMESTAMP,
    is_read BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (bidder_id) REFERENCES Users(user_id),
    FOREIGN KEY (auction_id) REFERENCES AuctionListings(listing_id)
);

CREATE TABLE PaymentServiceLog (
    log_id INT AUTO_INCREMENT PRIMARY KEY,
    payment_id INT,
    request_data TEXT, -- JSON or serialized request data sent to payment service
    response_data TEXT, -- JSON or serialized response data from payment service
    status ENUM('Success', 'Failure'),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (payment_id) REFERENCES BidderPayments(payment_id)
);


CREATE TABLE Admins (
    admin_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(100) NOT NULL, -- Hash and store passwords securely
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
